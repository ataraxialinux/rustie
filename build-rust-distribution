#!/bin/bash

set -e

clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' vendor/$1/.cargo-checksum.json
}

export CWD="$(pwd)"
export STUFF="$CWD/stuff"
export OUT="$CWD/out"
export SRC="$OUT/src"
export TOOLS="$OUT/tools"

export RUSTVER="1.46.0"

export LC_ALL="POSIX"
export HOSTCC="gcc"
export HOSTCXX="g++"
export XHOST="$(echo ${MACHTYPE} | sed -e 's/-[^-]*/-cross/')"
export PATH="$SRC/bin:$PATH"

if [ -z $MKOPTS ]; then
	export MKJOBS="$(expr $(nproc) + 1)"
fi

export MKOPTS="-j$MKJOBS"

rm -rf $OUT
mkdir -p $SRC $TOOLS

if [ "$TOOLCHAIN" != "no" ]; then
	cd "$SRC"
	for i in x86_64-linux-musl aarch64-linux-musl armv7l-linux-musleabihf arm-linux-musleabihf; do
		wget http://more.musl.cc/10/x86_64-linux-musl/$i-cross.tgz
		wget http://pkg.musl.cc/libexecinfo/$i.tgz -O libexecinfo-$i.tgz
		wget http://pkg.musl.cc/openssl/$i.tgz -O openssl-$i.tgz
		bsdtar -xvf $i-cross.tgz
		bsdtar -C "$SRC"/$i-cross -xvf libexecinfo-$i.tgz
		bsdtar -C "$SRC"/$i-cross -xvf openssl-$i.tgz
		export PATH="$SRC/$i-cross/bin:$PATH"
	done
fi

cd $SRC
wget https://static.rust-lang.org/dist/rustc-$RUSTVER-src.tar.gz
bsdtar -xvf rustc-$RUSTVER-src.tar.gz
cd rustc-$RUSTVER-src

patch -Np1 -i "$STUFF"/0006-Prefer-libgcc_eh-over-libunwind-for-musl.patch
patch -Np1 -i "$STUFF"/musl-dont-use-crt-static.patch
patch -Np1 -i "$STUFF"/1.44.0-libressl.patch

clear_vendor_checksums libc
clear_vendor_checksums openssl-src
clear_vendor_checksums openssl-sys

cat << EOF > config.toml
[llvm]
optimize = true
release-debuginfo = false
assertions = false
static-libstdcpp = true
ninja = true
targets = "AArch64;ARM;X86"

[build]
build = "x86_64-unknown-linux-musl"
host = [
  "x86_64-unknown-linux-musl",
  "aarch64-unknown-linux-musl",
  "armv7-unknown-linux-musleabihf",
  "arm-unknown-linux-musleabihf",
]
cargo = "$(which cargo)"
rustc = "$(which rustc)"
docs = false
compiler-docs  = false
extended = true
submodules = false
python = "python3"
locked-deps = true
vendor = true
cargo-native-static = true
sanitizers = false
profiler = false
full-bootstrap = false

[rust]
channel = "nightly"
rpath  = false
codegen-units = 1
debuginfo-level = 0
debug = false
backtrace = false
jemalloc = false
debug-assertions = false
codegen-tests = false
deny-warnings = false

[target.x86_64-unknown-linux-musl]
cc = "x86_64-linux-musl-gcc"
cxx = "x86_64-linux-musl-g++"
linker = "x86_64-linux-musl-gcc"
musl-root = "$SRC/x86_64-linux-musl-cross/x86_64-linux-musl"
crt-static = false

[target.aarch64-unknown-linux-musl]
cc = "aarch64-linux-musl-gcc"
cxx = "aarch64-linux-musl-g++"
linker = "aarch64-linux-musl-gcc"
musl-root = "$SRC/aarch64-linux-musl-cross/aarch64-linux-musl"
crt-static = false

[target.armv7-unknown-linux-musleabihf]
cc = "armv7l-linux-musleabihf-gcc"
cxx = "armv7l-linux-musleabihf-g++"
linker = "armv7l-linux-musleabihf-gcc"
musl-root = "$SRC/armv7l-linux-musleabihf-cross/armv7l-linux-musleabihf"
crt-static = false

[target.arm-unknown-linux-musleabihf]
cc = "arm-linux-musleabihf-gcc"
cxx = "arm-linux-musleabihf-g++"
linker = "arm-linux-musleabihf-gcc"
musl-root = "$SRC/arm-linux-musleabihf-cross/arm-linux-musleabihf"
crt-static = false
EOF

export RUST_BACKTRACE=1
export SSL_CERT_FILE="/etc/ssl/certs/ca-certificates.crt"
export X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR="$SRC/x86_64-linux-musl-cross/x86_64-linux-musl"
export AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR="$SRC/aarch64-linux-musl-cross/aarch64-linux-musl"
export ARMV7_UNKNOWN_LINUX_MUSLEABIHF_OPENSSL_DIR="$SRC/armv7l-linux-musleabihf-cross/armv7l-linux-musleabihf"
export ARM_UNKNOWN_LINUX_MUSLEABIHF_OPENSSL_DIR="$SRC/arm-linux-musleabihf-cross/arm-linux-musleabihf"

./x.py dist -j$MKJOBS
