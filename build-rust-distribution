#!/bin/bash

set -e

clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' vendor/$1/.cargo-checksum.json
}

export CWD="$(pwd)"
export STUFF="$CWD/stuff"
export OUT="$CWD/out"
export SRC="$OUT/src"
export TOOLS="$OUT/tools"

export RUSTVER="1.41.1"

export LC_ALL="POSIX"
export PATH="$TOOLS/x86_64-linux-musl-cross/bin:$TOOLS/i486-linux-musl-cross/bin:$TOOLS/aarch64-linux-musl-cross/bin:$TOOLS/armv7l-linux-musleabihf-cross/bin:$TOOLS/arm-linux-musleabi-cross/bin:$PATH"
export HOSTCC="gcc"
export HOSTCXX="g++"
export XHOST="$(echo ${MACHTYPE} | sed -e 's/-[^-]*/-cross/')"

if [ -z $MKOPTS ]; then
	export MKJOBS="$(expr $(nproc) + 1)"
fi

export MKOPTS="-j$MKJOBS"

rm -rf $OUT
mkdir -p $SRC $TOOLS

cd $SRC

for i in x86_64-linux-musl i486-linux-musl aarch64-linux-musl armv7l-linux-musleabihf arm-linux-musleabi; do
	wget https://musl.cc/${i}-cross.tgz
	tar -C $TOOLS -xvf ${i}-cross.tgz
	pushd $TOOLS/${i}-cross/${i}
		ln -sf . usr
	popd
done

wget https://sortix.org/libz/release/libz-1.2.8.2015.12.26.tar.gz
wget https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-3.0.2.tar.gz
wget https://www.libssh2.org/download/libssh2-1.9.0.tar.gz
wget https://curl.haxx.se/download/curl-7.69.0.tar.xz
wget https://distfiles.dereferenced.org/pkgconf/pkgconf-1.6.3.tar.xz
tar -xvf libz-1.2.8.2015.12.26.tar.gz
tar -xvf libressl-3.0.2.tar.gz
tar -xvf libssh2-1.9.0.tar.gz
tar -xvf curl-7.69.0.tar.xz
tar -xvf pkgconf-1.6.3.tar.xz
for i in x86_64-linux-musl i486-linux-musl aarch64-linux-musl armv7l-linux-musleabihf arm-linux-musleabi; do
	cd $SRC/pkgconf-1.6.3
	mkdir build-$i
	cd build-$i
	LDFLAGS="-static" \
	../configure \
		--build=$XHOST \
		--prefix=$TOOLS/${i}-cross \
		--with-sysroot="$TOOLS/${i}-cross/${i}" \
		--with-pkg-config-dir="$TOOLS/${i}-cross/${i}/lib/pkgconfig:$TOOLS/${i}-cross/${i}/usr/share/pkgconfig" \
		--with-system-libdir="$TOOLS/${i}-cross/${i}/lib" \
		--with-system-includedir="$TOOLS/${i}-cross/${i}/include"
	make $MKOPTS
	make $MKOPTS install

	ln -sf pkgconf $TOOLS/${i}-cross/bin/$i-pkg-config
	ln -sf pkgconf $TOOLS/${i}-cross/bin/$i-pkgconf

	cd $SRC/libz-1.2.8.2015.12.26
	mkdir build-$i
	cd build-$i
	../configure \
		--build=$XHOST \
		--host=$i \
		--prefix=$TOOLS/${i}-cross/${i} \
		--disable-shared
	make $MKOPTS
	make $MKOPTS install

	cd $SRC/libressl-3.0.2
	mkdir build-$i
	cd build-$i
	../configure \
		--build=$XHOST \
		--host=$i \
		--prefix=$TOOLS/${i}-cross/${i} \
		--disable-shared
	make $MKOPTS
	make $MKOPTS install

	cd $SRC/libssh2-1.9.0
	mkdir build-$i
	cd build-$i
	../configure \
		--build=$XHOST \
		--host=$i \
		--prefix=$TOOLS/${i}-cross/${i} \
		--disable-shared
	make $MKOPTS
	make $MKOPTS install

	cd $SRC/curl-7.69.0
	mkdir build-$i
	cd build-$i
	../configure \
		--build=$XHOST \
		--host=$i \
		--prefix=$TOOLS/${i}-cross/${i} \
		--with-ssl \
		--with-ca-bundle=/etc/ssl/certs/ca-certificates.crt \
		--with-ca-path=/etc/ssl/certs \
		--without-librtmp \
		--enable-ipv6 \
		--disable-shared
	make $MKOPTS
	make $MKOPTS install
done

cd $SRC
wget https://static.rust-lang.org/dist/rustc-$RUSTVER-src.tar.gz
tar -xvf rustc-$RUSTVER-src.tar.gz
cd rustc-$RUSTVER-src
patch -Np1 -i $STUFF/musl-and-security.patch
clear_vendor_checksums libc

cat << EOF > config.toml
[llvm]
optimize = true
release-debuginfo = false
assertions = false
static-libstdcpp = true
ninja = true
targets = "AArch64;ARM;Mips;PowerPC;Sparc;X86"
experimental-targets = ""

[build]
host = [
  "x86_64-unknown-linux-musl",
  "i586-unknown-linux-musl",
  "aarch64-unknown-linux-musl",
  "armv7-unknown-linux-musleabihf",
  "armv5te-unknown-linux-musleabi"
]
target = [
  "x86_64-unknown-linux-musl",
  "i586-unknown-linux-musl",
  "aarch64-unknown-linux-musl",
  "armv7-unknown-linux-musleabihf",
  "armv5te-unknown-linux-musleabi"
]
cargo = "$(which cargo)"
rustc = "$(which rustc)"
docs = false
compiler-docs = false
submodules = false
full-bootstrap = false
extended = true
verbose = 0
sanitizers = false
profiler = false
vendor = true
tools = ["cargo", "rls", "clippy", "rustfmt", "analysis", "src"]
cargo-native-static = true

[rust]
channel = "stable"
default-linker = "gcc"
rpath = false
codegen-units = 1
debuginfo-level = 2
backtrace = true
jemalloc = false
codegen-tests = false
optimize = true

[dist]
src-tarball = false

[target.x86_64-unknown-linux-musl]
cc = "x86_64-linux-musl-gcc"
cxx = "x86_64-linux-musl-g++"
linker = "x86_64-linux-musl-gcc"
musl-root = "$TOOLS/x86_64-linux-musl-cross/x86_64-linux-musl"
crt-static = false

[target.i586-unknown-linux-musl]
cc = "i486-linux-musl-gcc"
cxx = "i486-linux-musl-g++"
linker = "i486-linux-musl-gcc"
musl-root = "$TOOLS/i486-linux-musl-cross/i486-linux-musl"
crt-static = false

[target.aarch64-unknown-linux-musl]
cc = "aarch64-linux-musl-gcc"
cxx = "aarch64-linux-musl-g++"
linker = "aarch64-linux-musl-gcc"
musl-root = "$TOOLS/aarch64-linux-musl-cross/aarch64-linux-musl"
crt-static = false

[target.armv7-unknown-linux-musleabihf]
cc = "armv7l-linux-musleabihf-gcc"
cxx = "armv7l-linux-musleabihf-g++"
linker = "armv7l-linux-musleabihf-gcc"
musl-root = "$TOOLS/armv7l-linux-musleabihf-cross/armv7l-linux-musleabihf"
crt-static = false

[target.armv5te-unknown-linux-musleabi]
cc = "arm-linux-musleabi-gcc"
cxx = "arm-linux-musleabi-g++"
linker = "arm-linux-musleabi-gcc"
musl-root = "$TOOLS/arm-linux-musleabi-cross/arm-linux-musleabi"
crt-static = false
EOF

export RUST_BACKTRACE=1

./x.py dist -j$MKJOBS
